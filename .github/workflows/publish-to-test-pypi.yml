name: Publish Python 🐍 distributions 📦 to PyPI and TestPyPI

on: push

jobs:
  build-n-publish:
    name: Build and publish Python 🐍 distributions 📦 to PyPI and TestPyPI
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@master
    - name: Set up Python 3.8
      uses: actions/setup-python@v1
      with:
        python-version: 3.8
    - name: Install pypa/build
      run: >-
        python -m
        pip install
        build
        --user
    - name: Build a binary wheel and a source tarball
      run: >-
        python -m
        build
        --sdist
        --wheel
        --outdir dist/
    - name: Run prediction test
      run: >-
        CUDA_VISIBLE_DEVICES='-1' python -c '
        import keras_efficientnet_v2
        model = keras_efficientnet_v2.EfficientNetV2S(pretrained="imagenet")

        # Run prediction
        import tensorflow as tf
        from tensorflow import keras
        from skimage.data import chelsea
        imm = tf.image.resize(chelsea(), model.input_shape[1:3]) # Chelsea the cat
        pred = model(tf.expand_dims(imm / 255, 0)).numpy()
        print(keras.applications.imagenet_utils.decode_predictions(pred)[0])
        # [('n02124075', 'Egyptian_cat', 0.89163685), ('n02123045', 'tabby', 0.01682318), ...]
        out = keras.applications.imagenet_utils.decode_predictions(pred)[0]
        assert (out[0][-1] - 0.89163685) < 1e-5
        '
    - name: Publish distribution 📦 to Test PyPI
      if: startsWith(github.ref, 'refs/tags')
      uses: pypa/gh-action-pypi-publish@master
      with:
        password: ${{ secrets.TEST_PYPI_API_TOKEN }}
        repository_url: https://test.pypi.org/legacy/
    - name: Publish distribution 📦 to PyPI
      if: startsWith(github.ref, 'refs/tags')
      uses: pypa/gh-action-pypi-publish@master
      with:
        password: ${{ secrets.PYPI_API_TOKEN }}
